swagger: "2.0"
info:
  version: "v1"
  title: Secrets
  description: "Secrets APIs"

basePath: /regions/{regionId}

paths:
  "/secrets":
    ###################### Create Secrets ######################
    post:
      description: |
        Create a secret for storing relevant confidential information of image registry.
      operationId: createSecret
      parameters:
        - name: name
          in: query
          type: string
          required: true
          description: |
            Names of confidential data can’t be the same
        - name: secretType
          in: query
          type: string
          required: true
          description: |
            Now, only the following confidential data type is supported: docker-registry, which is the docker registry verification type.
        - name: data
          in: body
          schema:
            $ref: "../model/DockerRegistryData.yaml#/definitions/dockerRegistryData"
          description: |
            Confidential data. <br>
            Valid characters of key include letters, numbers, -, _ and .; <br>
            The value is the character string encoded by Base64, which can’t comprise a line break (please use base64 -w 0 option under linux); the length cap of each value is 4KB; and the length of the entire data can’t exceed 256KB; <br>
            Fields as server, username and password must be contained and the field of email is optional. <br>
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              result:
                properties:
                  secretName:
                    type: string
              requestId:
                type: string
        400:
          description: "Invalid parameter"
        401:
          description: "Authentication failed"
        404:
          description: "Not found"
        429:
          description: "Quota exceeded"
        500:
          description: "Internal server error"
        503:
          description: "Service unavailable"

    ###################### Search Secret List ######################
    get:
      description: |
        Search secret list. <br> 
        This API supports paging query with 20 items per page by default.
      operationId: describeSecrets
      parameters:
        - name: pageNumber
          in: query
          type: integer
          description: "Page; 1 by default"
        - name: pageSize
          in: query
          type: integer
          description: "Page size; it is 20 by default; value range[10, 100]"
        - name: filters
          in: query
          type: array
          items:
            $ref: "../../common/model/Filter.yaml#/definitions/filter"
          description: | 
            The name - secret is the name, supporting fuzzy search.
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              result:
                 properties:
                  secrets:
                    type: array
                    items:
                      $ref: "../model/Secret.yaml#/definitions/secret"
                  totalCount:
                    type: number
              requestId:
                type: string
        400:
          description: "Invalid parameter"
        401:
          description: "Authentication failed"
        404:
          description: "Not found"
        500:
          description: "Internal server error"
        503:
          description: "Service unavailable"

  "/secrets/{name}":
    ###################### Search Secret Details ######################
    get:
      description: |
        Search details of a single secrete
      operationId: describeSecret
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              result:
                properties:
                  secret:
                    $ref: "../model/Secret.yaml#/definitions/secret"
              requestId:
                type: string
        400:
          description: "Invalid parameter"
        401:
          description: "Authentication failed"
        404:
          description: "Not found"
        500:
          description: "Internal server error"
        503:
          description: "Service unavailable"
    ###################### Delete Secrets ######################
    delete:
      description: | 
        Delete a single secrete
      operationId: deleteSecret
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              requestId:
                type: string
        400:
          description: "Invalid parameter"
        401:
          description: "Authentication failed"
        404:
          description: "Not found"
        500:
          description: "Internal server error"
        503:
          description: "Service unavailable"

# Path General Parameters
parameters:
  regionId:
    name: regionId
    in: path
    required: true
    type: string
    description: Region ID
  name:
    name: name
    in: path
    required: true
    type: string
    description: Secret Name
