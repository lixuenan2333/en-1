swagger: "2.0"
info:
  version: "v1"
  title: Native Container
  description: "Native Container APIs"

basePath: /regions/{regionId}

paths:
  "/containers":
    ###################### Create container interface ######################
    post:
      description: |
        Create configuration containers for one or more sets
        - Real-name verification is required for creating containers
        - image
            - Determine the container image via the image name
            - Images named as nginx:tag or mysql/mysql-server:tag are the public images of docker hub
            - Images named as container-registry/image:tag are the images of private registry
            - The private registry must be compatible to the docker registry verification mechanism and save confidential information via secret.
        - Hostname Specification
            - Two modes are supported: Write through a tab mode or write through a complete machine name mode.
            - Tag Specification
                - 0-9, a-z (both upper case and lower case are acceptable) and - (minus), others are deemed as invalid character string
                - Neither start with a minus nor end with a minus.
                - At least 1 character and at most 63 characters
            - A complete machine name consists of a series of tabs and dots
                - Tags are connected with “.” (dots)
                - Neither start with a “.” (dot) or end with a “.” (dot).
                - Complete machine name (including tags and dots “.”) with at most 63 ASCII characters
        - Network Configuration
            - Specify primary network interface configuration information
                - Be sure to specify one subnet
                - A security group must be specified when creating a virtual machine and at most 5 security groups can be specified.
                - The elastic IP can be restricted by specifying elasticIp specification, with the bandwidth value range of [1-200]Mbps and the stepping of 1Mbps.
                - The primaryIpAddress of network interface can be specified; such IP shall be within the subnet IP range and shall not be occupied; and maxCount can only be 1 when specifying subnet IP.
                - The securityGroup and the Subnet shall be in the same Virtual Private Cloud (VPC).
                - Set deviceIndex of primary network interface to be 1
        - Storage
            - The volume can be divided into a root volume and a data volume; the root volume is mounted with the catalog /; and the data volume is mounted with any specified catalog.
            - The bottom storage medium of the volume only supports the cloud type, i.e. the Cloud Disk Service.
            - System Disk
                - The available Cloud Disk Service types include ssd and premium-hdd.
                - Disk Size
                    - SSD: Range [10, 100]GB, Step Size: 10G
                    - Premium-hdd: Range [20, 1000]GB, Step Size: 10G
                - Auto-delete
                    - The cloud disk will be automatically deleted with the container by default. For the data disk or the shared type data disk with the monthly package, the parameter is invalid.
                - The existing Cloud Disk Service can be selected.
            - Data Disk
                - The available Cloud Disk Service types include ssd and premium-hdd.
                - Disk Size
                    - ssd: Range[20, 1000] GB, Step Size: 10G
                    - premium-hdd: Range[20, 3000] GB, Step Size: 10G
                - Auto-delete
                    - Automatic Deletion by Default
                - The existing Cloud Disk Service can be selected.
                - A single container can be mounted with 7 data volumes at most.
        - Billing
          - Billing mode of EIP. You may choose pay by consumption separately, and the other billing modes are subject to the machine.
          - The billing mode of the cloud disk is subject to the machine
        - Container Log
            - A 10MB storage space will be distributed to the local by default and is automatically rotated.
        - Others
            - After being created, the container is in running status.
            - maxCount refers to the maximum effort and the maxCount is not guaranteed.
      operationId: createContainers
      parameters:
        - name: containerSpec
          in: body
          description: "Create container specification"
          schema:
            $ref: "../model/ContainerSpec.yaml#/definitions/containerSpec"
        - name: maxCount
          in: query
          type: integer
          description: "Purchase number of instances; value range: [1,100]"
      responses:
        200:
          description: OK
          schema:
            properties:
              result:
                properties:
                  containerIds:
                    type: array
                    items:
                      type: string
              requestId:
                type: string
        400:
          description: "Invalid parameter"
        401:
          description: "Authentication failed"
        404:
          description: "Not found"
        429:
          description: "Quota exceeded"
        500:
          description: "Internal server error"
        503:
          description: "Service unavailable"

    ###################### Container List Interface ######################
    get:
      description: |
        Search Native Container details in batches <br>
        This API supports paging query with 20 items per page by default.
      operationId: describeContainers
      parameters:
        - name: pageNumber
          in: query
          type: integer
          description: "Page; 1 by default"
        - name: pageSize
          in: query
          type: integer
          description: "Page size; it is 20 by default; value range[10, 100]"
        - name: filters
          in: query
          type: array
          items:
            $ref: "../../common/model/Filter.yaml#/definitions/filter"
          description: | 
            containerId - Instance ID, exact match, support many IDs
            privateIpAddress - Primary network interface IP address, fuzzy matching and supporting many IP addresses
            az-Availability Zone, exact match, multiple supported
            vpcId-VPC ID, exact match, multiple supported
            status - Container status, exact match, support many statuses
            name - Instance name, fuzzy matching and supporting many names
            subnetId - Instance ID, fuzzy matching and supporting many IDs
      responses:
        200:
          description: OK
          schema:
            properties:
              result:
                properties:
                  containers:
                    type: array
                    items:
                      $ref: "../model/Container.yaml#/definitions/container"
                  totalCount:
                    type: number
              requestId:
                type: string
        400:
          description: "Invalid parameter"
        401:
          description: "Authentication failed"
        404:
          description: "Not found"
        500:
          description: "Internal server error"
        503:
          description: "Service unavailable"

  "/containers/{containerId}":
    ###################### Container Detail Interface ######################
    get:
      description: |
        Search details of one Native Container
      operationId: describeContainer
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              result:
                $ref: "../model/Container.yaml#/definitions/container"
              requestId:
                type: string
        400:
          description: "Invalid parameter"
        401:
          description: "Authentication failed"
        404:
          description: "Not found"
        500:
          description: "Internal server error"
        503:
          description: "Service unavailable"
    
    ###################### Delete Container Interface ######################
    delete:
      description: |
        The container must have the status of stopped, running or error. <br>
        The instance paid by volume will keep running until it is deleted. The instance not used anymore can be passively stopped through this interface. <br>
        Only the instance with the billing type by volume can be passively deleted. The container with monthly package expired can also be deleted. Please report to the ticket system for other situations. The container with billing status exception can’t be deleted.
      operationId: deleteContainer
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              requestId:
                type: string
        400:
          description: "Invalid parameter"
        401:
          description: "Authentication failed"
        404:
          description: "Not found"
        500:
          description: "Internal server error"
        503:
          description: "Service unavailable"

  "/containers/{containerId}:startContainer":
    ###################### Start Container Interface ######################
    post:
      description: |
        Start a single container in the off status and the container involved a job can’t be started. <br>
        When the container instance or a cloud disk associated is defaulting, the container will not be normally started. <br>
      operationId: startContainer
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              requestId:
                type: string
        400:
          description: "Invalid parameter"
        401:
          description: "Authentication failed"
        404:
          description: "Not found"
        500:
          description: "Internal server error"
        503:
          description: "Service unavailable"

  "/containers/{containerId}:stopContainer":
    ###################### Stop Container Interface ######################
    post:
      description: |
        Stop a single instance in the operating status and the container involved in a job can’t be started.
      operationId: stopContainer
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              requestId:
                type: string
        400:
          description: "Invalid parameter"
        401:
          description: "Authentication failed"
        404:
          description: "Not found"
        500:
          description: "Internal server error"
        503:
          description: "Service unavailable"

  "/containers/{containerId}:modifyContainerAttribute":
    ###################### Modify Container Attribute ######################
    patch:
      description: |
        Modify the container name and description.
      operationId: modifyContainerAttribute
      parameters:
        - name: name
          in: query
          type: string
          description: "Container Name"
        - name: description
          in: query
          type: string
          description: "Container description; the description must be specified"
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              requestId:
                type: string
        400:
          description: "Invalid parameter"
        401:
          description: "Authentication failed"
        404:
          description: "Not found"
        500:
          description: "Internal server error"
        503:
          description: "Service unavailable"

  "/containers/{containerId}:associateElasticIp":
    ###################### Associate EIP to a Container ######################
    post:
      description: |
        The elastic IP associated with the container is the elastic IP corresponding to the primary network interface and primary private IP.
        One virtual machine only can be associated with one elastic IP (primary network interface). If the primary network interface has the elastic IP, the error will be returned. <br>
        If the user is in the blacklist, the error will be returned.
      operationId: associateElasticIp
      parameters:
        - name: elasticIpId
          in: query
          type: string
          required: true
          description: "Elastic IP ID"
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              requestId:
                type: string
        400:
          description: "Invalid parameter"
        401:
          description: "Authentication failed"
        404:
          description: "Not found"
        500:
          description: "Internal server error"
        503:
          description: "Service unavailable"

  "/containers/{containerId}:disassociateElasticIp":
    ###################### Disassociate EIP from Container ######################
    post:
      description: |
        The EIP disassociated with the container is the elastic IP corresponding to the primary network interface and primary private IP.
      operationId: disassociateElasticIp
      parameters:
        - name: elasticIpId
          in: query
          type: string
          required: true
          description: "Elastic IP ID"
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              requestId:
                type: string
        400:
          description: "Invalid parameter"
        401:
          description: "Authentication failed"
        404:
          description: "Not found"
        500:
          description: "Internal server error"
        503:
          description: "Service unavailable"

  "/containers/{containerId}:getLogs":
    ###################### Search Container Logs ######################
    get:
      description: |
        Search a container log
      operationId: getLogs
      parameters:
        - name: tailLines
          in: query
          type: integer
          description: |
            Return the tailLines in log file. If no tail line is specified, the log file will be read from the container starting time or the time specified by sinceSeconds by default.
        - name: sinceSeconds
          in: query
          type: integer
          description: |
            Return logs in sinceSeconds relatively before current time.
        - name: limitBytes
          in: query
          type: integer
          description: |
           Restrict byte number in returned log file within [1-4]KB, with 4KB at most.
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              result:
                properties:
                  logs:
                    type: object
                    properties:
                      content:
                        type: string
              requestId:
                type: string
        400:
          description: "Invalid parameter"
        401:
          description: "Authentication failed"
        404:
          description: "Not found"
        500:
          description: "Internal server error"
        503:
          description: "Service unavailable"



# Path General Parameters
parameters:
  regionId:
    name: regionId
    in: path
    required: true
    type: string
    description: Region ID
  container:
    name: containerId
    in: path
    required: true
    type: string
    description: Container ID
