swagger: "2.0"
info:
  version: "v1"
  title: TOPIC APIs
  description: "Information APIs related to Stream Hub topic"

basePath: /regions/{regionId} 

paths:
  "/topicList":
  ###################### Query topic APIs ######################
    get:
      description: "Query the topic list, return to the topic collection"
      operationId: getTopicList
      parameters:
        - name: keyword
          in: query
          type: string
          required: false
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              result:
                properties:
                  topic:
                    type: array
                    items:
                      type: object
                      $ref: "../model/topicListInfo.yaml#/definitions/topicListInfo"
              requestId:
                type: string
        401:
          description: ERROR
          
  "/topic":
  ###################### Create topic APIs ######################
    post:
      description: "When creating topic, only the topic parameter in the topicModel needs to be transmitted, and the other two parameters can be blank"
      operationId: addTopic
      parameters:
        - name: topicModel
          in: body
          required: true
          description: 'Example: {"topicModel":{"topic":{"archived":0,"id":"","name":"create","remark":"Note","shardNum":1,"partitionNum":2,"lifecycle":3}}}'
          schema:
            $ref: "../model/addOrUpdateTopic.yaml#/definitions/topicModel"
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              result:
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                    description: "Status Information"
              requestId:
                type: string
        400:
          description: ERROR
                
  ###################### Update topic APIs ######################
    put:
      description: "The API can be used to update subjects, create archives, modify archives, delete archives; different functions can be realized by transmitting different parameters. To modify the archives, only the parameters of the corresponding archives need to be modified; to delete the archives, only the archive parameters need to be set as blank"
      operationId: updateTopic
      parameters:
        - name: topicModel
          in: body
          required: true
          description: "When updating the subject, only the attributes in the topic in the topicModel need to be modified; to create archives, the target and the parameters of archiving destination (mysql, JCS for Elasticsearch, Object Storage Service and Data Compute) need to be assigned."
          schema:
            $ref: "../model/addOrUpdateTopic.yaml#/definitions/topicModel"
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              result:
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                    description: "Status Information"
              requestId:
                type: string
        400:
          description: ERROR
###################### Delete topic APIs ######################
    delete:
      description: "Delete Topic"
      operationId: deleteTopic
      parameters:
        - name: name
          in: query
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              result:
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                    description: "Status Information"
              requestId:
                type: string
        404:
          description: NOT FOUND
  ###################### View the assigned subject ######################
    get:
      description: "Query the assigned subject, the archiving information will be returned if it has been archived"
      operationId: describeTopic
      parameters:
        - name: name
          in: query
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              result:
                properties:
                    topic:
                      type: object
                      $ref: "../model/addOrUpdateTopic.yaml#/definitions/topicModel"
              requestId:
                type: string
        404:
          description: NOT FOUND
                                
# Path General Parameters
parameters:
  regionId:
    name: regionId
    in: path
    required: true
    type: string
    description: "Region ID"