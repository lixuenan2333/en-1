swagger: "2.0"
info:
  version: "v1"
  title: JCS for Redis Instance APIs
  description: "JCS for Redis Instance Related APIs"

basePath: /regions/{regionId}

paths:
  "/cacheInstance":
    ###################### Create JCS for Redis APIs ######################
    post:
      description: |
        Create JCS for Redis Instance of the Specified Configuration
        Specification Performance: The specifications for creating the JCS for Redis instance are divided into two versions: principal-subordinate version and cluster version. Each specification has the maximum number of connections, the internal network bandwidth cap, CPU processing capacity, specification code and other information, please see: <a href='https://www.jdcloud.com/help/detail/411/isCatalog/1'>instance type code</a>
        Availability Zone: Available zone is a physical zone in which the infrastructure such as power and network are independent of each other in the same region. A zone contains one or more availability zones, and multiple availability zones in the same region can be connected to each other. Detailed information on the geographical availability zone can be found: <a href="https://www.jdcloud.com/help/detail/2222/isCatalog/1">Regional availability zone details</a>
        Virtual Private Cloud: referred to as VPC, which means the isolation network space with customized logic and supports for customized network segment, rout policy, etc. Specific information can be found: <a href="https://www.jdcloud.com/help/detail/1509/isCatalog/1">Virtual Private Cloud</a>
        Subnet: The subnet is the IP address block in the range of the VPC IP address, which is subnet for short. The subnet is created under the VPC. The segment in the same VPC cannot overlap and the segments of different VPCs can overlap. Specific information can be found: <a href="https://www.jdcloud.com/help/detail/1510/isCatalog/1">subnet details</a>
      operationId: createCacheInstance
      parameters:
        - name: cacheInstance
          in: body
          required: true
          schema:
            $ref: "../model/CacheInstanceSpec.yaml#/definitions/cacheInstanceSpec"
          description: "Creates a specific attribute of the cache instance, including the Virtual Private Cloud ID (vpcId), subnet ID (subnetId), cache instance name, cache instance type, cache instance password, the description of ID information of the availability zone where the cache instance is located and cache instance."
        - name: charge
          in: body
          schema:
            $ref: "../../charge/model/ChargeSpec.yaml#/definitions/chargeSpec"
          description: "Billing Information Related Configuration."
      responses:
        200:
          description: OK
          schema:
            properties:
              result:
                properties:
                  cacheInstanceId:
                    type: string
                    description: "ID of the Cache Instance Created."
                  orderNum:
                    type: string
                    description: "The order number generated by creating the cache instance."
              requestId:
                type: string
                description: "ID of This Query Request."

    ###################### JCS for Redis List APIs ######################
    get:
      description: "The query of JCS for Redis instance list and its instance information can be the the paging query, query the specified page number, specify the size of page and the filter conditions"
      operationId: describeCacheInstances
      parameters:
        - name: pageNumber
          in: query
          type: integer
          description: "The page number of the query cache instance is 1 by default"
        - name: pageSize
          in: query
          type: integer
          description: "The size of the page to query the cache instance is 20 by default and the value range is [10, 100]"
        - name: filters
          in: query
          type: array
          items:
            $ref: "../../common/model/Filter.yaml#/definitions/filter"
          description: |
            cacheInstanceId -cache instance Id can be matched exactly and support multiple
            cacheInstanceName -cache instance name is matched fuzzily and support for a single
            cacheInstanceStatus -the status of cache instance is matched exactly, and support multiple (running: run, error: error, creating: pending, changing: changing, deleting: deleting)
        - name: sorts
          in: query
          type: array
          items:
            $ref: "../../common/model/Sort.yaml#/definitions/sort"
          description: |
            createTime - Creation Time (asc: Positive Order, desc: Inverted Order)
      responses:
        200:
          description: OK
          schema:
            properties:
              result:
                description: "The information result of querying the cache instance list"
                properties:
                  cacheInstances:
                    type: array
                    items:
                      $ref: "../model/CacheInstance.yaml#/definitions/cacheInstance"
                    description: "The information to query the object cache instance."
                  totalCount:
                    type: integer
                    description: "The total number of cache instances queried."
              requestId:
                type: string
                description: "ID of This Query Request"

  "/cacheInstance/{cacheInstanceId}":
    ###################### JCS for Redis Details APIs ######################
    get:
      description: "Query details of a single JCS for Redis instance"
      operationId: describeCacheInstance
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              result:
                description: "The information result of querying the cache instance list"
                properties:
                  cacheInstance:
                    description: "The information of the object cache instance to query"
                    $ref: "../model/CacheInstance.yaml#/definitions/cacheInstance"
              requestId:
                type: string
                description: "ID of This Query Request"
        404:
          description: NOT_FOUND

    ###################### Modify the Resource Name and Description of JCS for Redis#################### #
    patch:
      description: "Modify the resource name and description of the JCS for Redis instance, at least one of the two"
      operationId: modifyCacheInstanceAttribute
      parameters:
        - name: cacheInstanceName
          in: query
          type: string
          description: "The name of JCS for Redis instance resource only supports numbers, letters, underlines, Chinese, no less than 2 characters and no more than 32 characters"
        - name: cacheInstanceDescription
          in: query
          type: string
          description: "The description of the JCS for Redis instance resource cannot be more than 256 characters"
      responses:
        200:
          description: OK
          schema:
            properties:
              requestId:
                type: string
                description: "ID of This Modification Request"
    
    ###################### Delete JCS for Redis APIs######################
    delete:
      description: |
        Delete a single JCS for Redis instance that is paid by configuration billing or the monthly package has expired and the monthly package that has not expired cannot be deleted
        Only in the running<b>running</b>or error<b>error</b>status can be deleted, but other status cannot be deleted
        The user in the White List cannot delete the virtual machine that the monthly package has expired
      operationId: deleteCacheInstance
      responses:
        200:
          description: OK
          schema:
            properties:
              requestId:
                type: string
                description: "ID of This Delete Request"

  "/cacheInstance/{cacheInstanceId}:modifyCacheInstanceClass":
    ###################### Change JCS for Redis Configuration ######################
    post:
      description: |
        Changing the configuration of the JCS for Redis instance can only change the instance configuration in the running status and the specification of the changed configuration cannot be the same as the previous one
        Pay-in-advance users, from the cluster version to the principal/subordinate version, the memory size of the new specification is larger than the old size of the memory size, from the principal/subordinate version to the cluster version, the memory size of the new specification is no less than the memory size of the old specification
      operationId: modifyCacheInstanceClass
      parameters:
        - name: cacheInstanceClass
          in: query
          required: true
          type: string
          description: "The modified JCS for Redis type after the change, see: <a href='https://www.jdcloud.com/help/detail/411/isCatalog/1'>instance type code</a>"
      responses:
        200:
          description: OK
          schema:
            properties:
              result:
                description: "The Result Information of This Request."
                properties:
                  orderNum:
                    type: string
                    description: "The Order Number of This Change Request."
              requestId:
                type: string
                description: "ID of This Change Request"

  "/cacheInstance/{cacheInstanceId}:resetCacheInstancePassword":
    ###################### Reset JCS for Redis Password ######################
    post:
      description: "Reset the password of the JCS for Redis instance to support the password-free operation"
      operationId: resetCacheInstancePassword
      parameters:
        - name: password
          in: query
          type: string
          description: "Password contains and only supports letters and numbers with no less than 8 characters and no more than 16 characters. If the password is null, it means password-free."
      responses:
        200:
          description: OK
          schema:
            properties:
              requestId:
                type: string
                description: "ID of This Reset Request"

  "/cacheInstance/{cacheInstanceId}/instanceConfig":
    ###################### Modify JCS for Redis Parameter Configuration ######################
    post:
      description: "Modify the parameter configuration of the JCS for Redis instance to support the modification of some parameter"
      operationId: "modifyInstanceConfig"
      x-jdcloud-internal: true
      parameters:
        - name: instanceConfig
          in: body
          required: true
          description: "The Configuration Information of the Cache Instance Parameter"
          schema:
            type: array
            items:
              $ref: "../model/ConfigItem.yaml#/definitions/configItem"
      responses:
        200:
          description: OK
          schema:
            properties:
              requestId:
                type: string
                description: "ID of This Modification Request"

    ###################### View JCS for Redis Parameter Configuration ######################
    get:
      description: "View the current configuration parameters of the JCS for Redis instance"
      operationId: "describeInstanceConfig"
      x-jdcloud-internal: true
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              result:
                properties:
                  instanceConfig:
                    type: array
                    items:
                      $ref: "../model/ConfigItem.yaml#/definitions/configItem"
              requestId:
                type: string
                description: "ID of the Current Request"
        404:
          description: NOT_FOUND

  "/cacheInstance/{cacheInstanceId}/backup":
    ###################### Creat JCS for Redis Backup ######################
    post:
      description: "Create a JCS for Redis instance backup and the backup type is manual backup, which can set the backup file name"
      operationId: "createBackup"
      x-jdcloud-internal: true
      parameters:
        - name: fileName
          in: query
          required: true
          type: string
          description: "Backup file name, only supports the combination of English numbers and underlines, and the length does not exceed 32 characters"
        - name: backupType
          in: query
          required: true
          type: integer
          description: "Backup type, manual backup is 1"
      responses:
        200:
          description: OK
          schema:
            properties:
              result:
                properties:
                  baseId:
                    type: string
                    description: "ID of the backup operation that can be used to query the manual backup information of this instance"
              requestId:
                type: string
                description: "ID of This Create Request"

    ###################### Query JCS for Redis Backup List ######################
    get:
      description: "Querying JCS for Redis backup list supports paging query and querying a backup information"
      operationId: "describeBackups"
      x-jdcloud-internal: true
      parameters:
        - name: pageNumber
          in: query
          required: true
          type: integer
          description: "Page; 1 by default"
        - name: pageSize
          in: query
          required: true
          type: integer
          description: "Page size; it is 20 by default; value range[10, 100]"
        - name: baseId
          in: query
          required: false
          type: string
          description: "Backup operation ID, you can query the list information of a manual backup"
      responses:
        200:
          description: OK
          schema:
            properties:
              result:
                properties:
                  backups:
                    type: array
                    description: "Set of Backup APIs"
                    items:
                      $ref: "../model/Backup.yaml#/definitions/backup"
                  totalCount:
                    type: integer
                    description: "Total Number of Backups"
              requestId:
                type: string
                description: "ID of This Query Request"
        404:
          description: NOT_FOUND

  "/cacheInstance/{cacheInstanceId}/backupPolicy":
    ###################### Query JCS for Redis Backup Policy ######################  
    get:
      description: "Query JCS for Redis Backup Policy"
      operationId: "describeBackupPolicy"
      x-jdcloud-internal: true
      responses:
        200:
          description: OK
          schema:
            properties:
              backupPeriod:
                type: string
                description: "Backup period contains Monday, Tuesday, Wednesday, Thursday, Friday, Saturday and Sunday"
              backupTime:
                type: string
                description: "Backup time, format: HH:mmZ-HH:mmZ"
              nextBackupTime: 
                type: string
                format: date-time
                description: "The next  time period for automatic backup, format: YYYY-MM-DD HH:mm-HH:mm"
              requestId:
                type: string
                description: "ID of This Query Request"
        404:
          description: NOT_FOUND

    ###################### Modify JCS for Redis Backup Policy ######################
    patch:
      description: "Modify the automatic backup policy of JCS for Redis to modify the backup period and backup time period"
      operationId: "modifyBackupPolicy"
      x-jdcloud-internal: true
      parameters:
        - name: backupTime
          in: query
          required: true
          type: string
          description: "Backup time, format: HH:mmZ-HH:mmZ"
        - name: backupPeriod
          in: query
          required: true
          type: string
          description: |
            Backup Period: Including
            Monday，Tuesday，Wednesday，Thursday，Friday，Saturday，Sunday
      responses:
        200:
          description: OK
          schema:
            properties:
              requestId:
                type: string 
                description: "ID of This Query Request"

  "/cacheInstance/{cacheInstanceId}/restore":
    ###################### Backup and Restore JCS for Redis Instance ######################
    post:
      description: "Backup and restore the JCS for Redis instance is to restore the JCS for Redis instance based on one backup operation"
      operationId: "restoreInstance"
      x-jdcloud-internal: true
      parameters:
        - name: baseId
          in: query
          required: true
          type: string
          description: "Backup operation ID is to restore JCS for Redis instance according to this backup operation"
      responses:
        200:
          description: OK
          schema:
            properties:
              requestId:
                type: string 
                description: "ID of This Request"


# Path General Parameters
parameters:
  regionId:
    name: regionId
    in: path
    required: true
    type: string
    description: "The Region ID of the region where the JCS for Redis instance is located. At present, the JCS for Redis has North China, South China, and East China regions, and the corresponding Region IDs are cn-north-1, cn-south-1, and cn-east-2"
  cacheInstance:
    name: cacheInstanceId
    in: path
    required: true
    type: string
    description: "The ID of the JCS for Redis instance is the unique identifier to access to instance."
